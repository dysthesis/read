> > A farmhand and a composer are reading Pravda, a transcript of> Khrushchev’s speech about music. Farmhand sums up: “You have it> better, music he at least understands!” > An old Soviet joke.
Off-topic post about economics. I have no idea what I am talking about
here, but I do have some intrusive thoughts about tariffs.
*First*, optimal amount of tariffs might be non-zero. In terms
of efficiency, tariffs are a pure loss: primarily through distortions
to optimal allocation of resources, but also through bureaucratic
overhead to enforce the tariffs themselves. But it seems to me that an
ideal, frictionless world with zero tariffs would see extreme
centralization in every industry. This seems bad from the resilience
perspective —small, local shocks could lead to global disruptions.
Tariffs should produce some amount of decentralization, which, while
inefficient, is less sensitive to initial conditions.
*Second*, tariffs might lead to more automation. My
understanding is that a big driver for moving industries around are
labor costs. Human labor is a major input of manufactured goods, and
wages are a significant component of costs. There are two ways to cut
the costs: either you figure out a way to make the product with less
labor, or you move the production where the labor is cheap. Tariffs
and minimal wage makes labor costlier, pushing towards reducing the
amount of work through better efficiency.
*Third*, tariffs might be politically sticky, via public choice
theory. Tariffs create concentrated interests, which tend to wield
more political power than diffused public interest. It is easier for a
single tariff-protected industry to coordinate to lobby maintaining
the tariffs, than it is for*everyone else*to coordinate to repel the tariffs, even though
tariffs might be net-negative.
P.S. While undoubtedly prompted by the world outside, this post is
explicitly not a commentary on any specific events, real or imaginary.

What’s in common between these two blog posts (pardon me, my fellow
crustaceans of lobster variety)?
![](https://github.com/user-attachments/assets/f55cb0fa-2410-4c92-82c6-f2411aa313f5)![](https://github.com/user-attachments/assets/f7b4bfc7-eee2-4d30-9133-aee51750db4f)
They both have horizontal scroll on mobile! Horizontal scroll is very
distracting –when you scroll vertically with your thumb, you
necessarily scroll horizontally as well. Any amount of horizontal
scroll clips the left edge of the screen, chopping off the beginning
of every sentence!
This is a hard problem to fix, or at least I don’t know a reliable
simple solution. Still, I think this site should not have overflows,
so let me share some things I’ve learned about the width of things!
## [Code Blocks](https://matklad.github.io/2025/04/22/horizontal-scroll.html#Code-Blocks)
In general, you want your main text to be pretty narrow, about 50-60
characters. This creates a problem for coding blogs —code, unlike
prose, wants to be a bit wider. While its a good idea to keep most
of the examples narrow, an occasional line still wants to be longer
than 60. My suggested solution here is to accept this, and allow
code samples to be wider than the main text. This is not super
trivial to achieve with CSS, but I borrowed a solution from[https://blog.xoria.org](https://blog.xoria.org).
My HTML structure looks roughly like this,`body`&gt;`main`&gt;`article`&gt;`section?`&gt;`p`:
```
`&lt;body&gt;&lt;main&gt;&lt;article&gt;&lt;h1&gt;Against Horizontal Scroll&lt;timeclass="meta"datetime="2025-04-22"&gt;Apr 22, 2025&lt;/time&gt;&lt;/h1&gt;&lt;p&gt;What’s in common between these two blog posts (pardon me, my fellowcrustaceans of lobster variety)?&lt;/p&gt;&lt;figureclass="code-block"&gt;&lt;pre&gt;&lt;code&gt;A bunch of code here.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;/article&gt;&lt;/main&gt;&lt;/body&gt;`
```
And I use the following CSS for narrow main text width and
moderately wide code:
```
`body{max-width:80ch;padding:2ch;margin-left: auto;margin-right: auto;}article&gt;&gt; \*,article&gt;section&gt;&gt; \*{max-width:55ch; }article&gt;section,article&gt;figure,article&gt;section&gt;figure{max-width:80ch; }`
```
Still, it is hard to enforce that*all*code samples fit
within the limit, and there are narrow screens where they can’t
physically fit.
To solve this, you need to make sure that, when a horizontal
scroll-bar appears due to a wide code block, it only appears on the
code block, and not on the entire website:
```
`figure.code-block&gt; pre &gt;code{overflow-x: auto;}`
```
Code blocks are the primary cause of horizontal scroll, so it’s
great that this is fixed now! Two more left!
## [Word Breaking](https://matklad.github.io/2025/04/22/horizontal-scroll.html#Word-Breaking)
The browser can reflow your article to make it narrower by breaking
text over multiple lines. This requires that your words are not too
wide. This is usually not a problem, unless you are a German, but
there are certain technical “words” that are, in fact, wide. For
example, I like to use bare URLs in my writing, and, because urls
typically do not contain spaces, they can’t be broken over multiple
lines and cause scrollbars. For such cases, you need to inform the
browser that it is okay to break the thing anywhere:
```
`p{hyphens: auto; }a.url{word-break: break-all; }`
```
## [Flexbox](https://matklad.github.io/2025/04/22/horizontal-scroll.html#Flexbox)
The final issue that hit me relates to flexbox. Specifically, its`min-width`semantics. If you don’t specify`min-width`of a flex item explicitly, it gets defaulted to`min-width: auto`.This
means that the*minimum*width that the item can occupy is
determined by*not*breaking paragraphs in lines! This way, the computed
minimal width of the element ends up being much wider than what you
would naturally expect. To fix it, manually override it:
```
`aside.admn&gt;div{flex:1;min-width:0; }`
```
That’s all for today. To underscore my point, and in solidarity with
the authors of the two blogs that started this, let me include a url
without`word-break`to make sure this article itself has
the problem it talks about:
[https://matklad.github.io/2025/04/22/horizontal-scroll.html](https://matklad.github.io/2025/04/22/horizontal-scroll.html)

